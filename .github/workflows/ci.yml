# Continuous integration
name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "fptools/**"
      - "tests/**"
      - ".github/workflows/ci.yml"
      - "environment.yml"
      - "pyproject.toml"
  push:
    branches:
      - main
    paths:
      - "fptools/**"
      - "tests/**"
      - ".github/workflows/ci.yml"
      - "environment.yml"
      - "pyproject.toml"

jobs:
  # Lint with black, docstring check with pydocstyle, static type checking with mypy
  lint:
    # This job runs:
    #
    # 1. Linting with black
    #
    # 2. Docstring style checking with pydocstyle 
    # Note: This uses Google-style docstring convention
    # Ref: https://google.github.io/styleguide/pyguide.html
    #
    # 3. Static type checking with MyPy
    # Note: We check using Python 3.9 to use the newer conventions for generic types.
    #
    # For a workaround on previous versions, simply add this import:
    #   from __future__ import annotations
    #
    # See: https://mypy.readthedocs.io/en/stable/builtin_types.html#generic-types
    name: Lint
    runs-on: "ubuntu-latest"
    steps:

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        pip install --editable .[dev]

    - name: Run Black
      run: |
        black --diff --check fptools tests

    - name: Run pydocstyle
      run: |
        pydocstyle fptools/

    - name: Run MyPy
      run: |
        mypy fptools tests

  # Tests with pytest
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python: [3.12]

    name: Tests (${{ matrix.os }}, Python ${{ matrix.python }})
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache conda
        uses: actions/cache@v3
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-${{matrix.python}}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}

      - name: Setup Miniconda
        # https://github.com/conda-incubator/setup-miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python }}
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
          environment-file: environment.yml
          activate-environment: fptools

      - name: Print environment info
        run: |
          which python
          pip --version
          conda info
          conda list

      - name: Test with pytest
        if: ${{ !(startsWith(matrix.os, 'ubuntu') && matrix.python == 3.12) }}
        run: |
          pytest

      - name: Test with pytest (with coverage)
        if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.python == 3.12 }}
        run: |
          pytest --cov=fptools --cov-report=xml tests/

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.python == 3.12 }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: false